You are my ATS keyword & resume tailor.

GOAL
Maximize alignment between my resume and the target job post without making false claims, while keeping an ATS-safe format.

INPUTS
[JOB POST]
<<< Senior Backend Engineer
Location
Remote

Employment Type
Full time

Location Type
Remote

Department
Engineering

Overview
Application
Loot Labs is on a mission to make collecting fun. We are passionate about bridging the gap between collectible markets and avid collectors.

Our product, Boxed.gg, offers a marketplace that facilitates the purchase and trade of digital items in an accessible manner. The platform initially focused on physical trading card games such as Pokémon, Magic: The Gathering, and Yu-Gi-Oh!, allowing users to digitally unbox rare cards and have the physical items shipped to their doorsteps.

We’re hiring a Senior Backend Engineer to design and scale the systems behind our products. You’ll lead architecture discussions, ship secure and performant APIs, and collaborate closely across the stack. We’re looking for someone who doesn’t just write code, but owns the full system lifecycle from design to debugging to iteration.

Location: Remote (US preferred) Occasional U.S. travel is required for in-person collaboration, team offsites, and company events.

Type: Full-time

Time Zone Requirement: Must have 5+ hours of overlap with US Pacific Time (9am–6pm PT)

Language: Must be fluent in English and comfortable working in a fast-paced, collaborative environment

Why You’ll Love Working Here
You’ll own features end-to-end and see your impact in days, not months.

Work alongside people who ship fast and care about the details.

Take ownership in ambiguous situations and shape solutions collaboratively.

How You’ll Contribute & Succeed Here
Bring senior-level experience building production backend systems (typically 5+ years)

Design, build, and maintain reliable, scalable backend services using AWS (DynamoDB, Lambda, S3, AppSync, Cognito, SQS) and SST (v2 and v3), with Infrastructure as Code best practices.

Develop and maintain GraphQL APIs and application logic in TypeScript

Lead system design, data modeling, and architectural decisions for scalability, performance, and long-term maintainability, owning solutions from planning through launch and iteration

Implement robust security, authentication/authorization, and data protection

Maintain healthy production systems through CI/CD best practices, robust observability, and effective incident response

Collaborate with frontend, product, and design to deliver backend systems that enable seamless user experiences

Bring strong product sense and user empathy. Always build with the why in mind, not just the what

Proactively communicate, raise concerns early, and solve problems with teammates

Balance speed and robustness, making pragmatic trade-offs to deliver value quickly without sacrificing quality

Mentor others, share knowledge, and help raise the technical bar

Bonus Skills
Experience with e-commerce systems, including payment processing, marketplaces, and order/fulfillment workflows

Familiarity with blockchain, cryptocurrency, or digital collectibles

Experience with OpenSearch / Elasticsearch

Experience building internal tools (e.g., Retool)

Experience with real-time and event-driven systems

Experience with data scraping or browser automation

Interest in collectibles, gaming, or creator platforms

Working Hours & Compensation

Loot Labs is a remote-first company, and this role is open to candidates globally. To support efficient collaboration across teams, we will prioritize applicants who have working hour overlap with U.S. and E.U. time zones.

Compensation will be competitive and based on your experience level as well as local market benchmarks for your region.

Accessibility & Employment Eligibility

We are committed to providing an inclusive and accessible recruitment process. If you need any accommodations during the application or interview process, please let us know—we’re happy to support you.

For candidates located in the United States: Loot Labs participates in E-Verify and will confirm work authorization as part of the hiring process. >>>

[RESUME]
<<< {
    "name": "KEVIN 'TYLER' COX",
    "position": "Angular Application Developer",
    "contactInformation": "(843) 718-4024",
    "email": "kevincox103@gmail.com",
    "address": "Charleston, SC",
    "profilePicture": "",
    "socialMedia": [
        { "socialMedia": "Github", "link": "github.com/Ty-lerCox" },
        {
            "socialMedia": "LinkedIn",
            "link": "linkedin.com/in/tyler-cox-1715065a/"
        },
        { "socialMedia": "Website", "link": "ty-lercox.github.io/portfolio/" }
    ],
    "summary": "Angular specialist (Signals, RxJS, NgRx) delivering secure, observable, and automated web applications. Eleven years at Expediters International building front‑ends, standing up CI/CD (Ansible, GitHub Actions, GitLab Runners, Azure DevOps), and instrumenting the Grafana stack (Prometheus, Loki, Tempo). Integrated SSO with Keycloak/Kerberos, established PKI/TLS, and evolved data ingestion from bespoke Kafka jobs to CDC → Kafka with bronze/silver/gold layers. Prototype quickly in Python; ship production services in Java Spring Boot and C#/.NET. Champion feature flags, DORA metrics, and Kanban to improve delivery flow. Built ODEYA.app, an SSR Angular app that auto‑curates YouTube playlists from channel collections and indexes shareable playlists for SEO.",
    "education": [
        {
            "school": "Trident Technical College",
            "degree": "Computer Science",
            "startYear": "",
            "endYear": "2013-12-31"
        }
    ],
    "workExperience": [
        {
            "company": "Expediters International (Expediters)",
            "position": "Angular Application Developer",
            "description": "Design and delivery of Angular front‑ends and platform tooling across multiple internal applications; emphasis on observability, automation, and secure-by-default practices.",
            "keyAchievements": "Built and led Angular front‑ends using Signals, RxJS, and NgRx across several logistics/operations applications.\nIntroduced step‑centric workflow modeling (e.g., Unified Process) to complement event‑driven patterns; improved clarity and traceability of process state.\nImplemented observability with Grafana stack—Prometheus (metrics), Loki (logs), Tempo (traces)—plus SLO dashboards and alerting to reduce detection and resolution time.\nStandardized CI/CD with GitHub Actions and GitLab Runners; used Ansible for repeatable on‑prem and cloud provisioning (GCP/Firebase); supported Kubernetes deployments.\nHardened identity and transport security: Keycloak SSO (OIDC/SAML), Kerberos integrations, internal CA/PKI, and TLS/mTLS with cert rotation policies.\nModernized data integration from ad‑hoc Kafka producers/consumers to database‑level Change Data Capture (CDC) feeding Kafka, organized via medallion layers (bronze/silver/gold).\nEnabled feature flag rollouts for progressive delivery; instrumented DORA metrics and coached teams on Kanban and velocity/flow tracking via Azure DevOps.\nDelivered APIs/services in Java Spring Boot and C#/.NET; used Python for rapid prototyping prior to hardening.\nAuthored Azure DevOps utilities (Python) to create user stories under Features with iteration/assignee/area/story‑point fields, improving planning throughput.",
            "startYear": "2014-09-01",
            "endYear": "Present"
        }
    ],
    "projects": [
        {
            "title": "ODEYA.app (Angular + SSR)",
            "link": "ty-lercox.github.io/portfolio/posts/odeya-overview/",
            "description": "Personal web app that auto‑curates YouTube playlists from collections of channels (e.g., cruise, gaming, tech) so new uploads from any channel in a collection flow into a single playlist.",
            "keyAchievements": "Implemented server‑side rendering so shared playlists are SEO‑indexable; playlist sharing enables discovery via search engines. Aggregation logic supports many‑to‑one channel collections; reduced manual playlist upkeep.",
            "startYear": "2025-03-01",
            "endYear": "2025-05-31",
            "name": "ODEYA.app"
        },
        {
            "title": "Logistics Process Orchestration (Angular Signals + NgRx)",
            "link": "",
            "description": "Front‑end architecture for step‑centric workflows replacing purely event‑driven UIs in logistics operations.",
            "keyAchievements": "Normalized state, clear effects, and deterministic UI flows; fully instrumented for metrics/logs/traces.",
            "startYear": "",
            "endYear": "Present",
            "name": "Logistics Process Orchestration"
        },
        {
            "title": "Observability Enablement (Grafana Stack)",
            "link": "",
            "description": "Service health/SLO dashboards with Prometheus metrics, Loki logs, and Tempo traces; alerting integrated with deployment telemetry.",
            "keyAchievements": "Improved issue detection and trace‑led debugging across services; consistent dashboards for teams.",
            "startYear": "",
            "endYear": "Present",
            "name": "Observability Enablement"
        },
        {
            "title": "CI/CD Blueprint & Ansible Provisioning",
            "link": "",
            "description": "Reusable pipelines (GitHub Actions/GitLab Runners) and Ansible roles for consistent build/test/deploy across on‑prem and cloud targets.",
            "keyAchievements": "Cut lead time to change; standardized quality gates and environment promotion.",
            "startYear": "",
            "endYear": "Present",
            "name": "CI/CD Blueprint"
        },
        {
            "title": "Data Flow Modernization (CDC → Kafka → Medallion)",
            "link": "",
            "description": "Replaced batch/legacy Kafka usage with database‑level CDC streaming into Kafka, organized into bronze/silver/gold layers.",
            "keyAchievements": "Improved reliability, lineage, and downstream transformations; clearer SLAs and reprocessing.",
            "startYear": "",
            "endYear": "Present",
            "name": "Data Flow Modernization"
        },
        {
            "title": "SSO & PKI Hardening",
            "link": "",
            "description": "Unified identity and secure transport across services.",
            "keyAchievements": "Keycloak (OIDC/SAML), Kerberos, internal CA/PKI, TLS/mTLS, and certificate lifecycle policies.",
            "startYear": "",
            "endYear": "Present",
            "name": "SSO & PKI Hardening"
        },
        {
            "title": "Azure DevOps Utilities (Planning Automation)",
            "link": "",
            "description": "Python tooling to create child User Stories under Features with Iteration, Assignee, Area, and Story Points fields.",
            "keyAchievements": "Accelerated planning and improved consistency of backlog data.",
            "startYear": "",
            "endYear": "Present",
            "name": "Azure DevOps Utilities"
        }
    ],
    "skills": [
        {
            "title": "Technical Skills",
            "skills": [
                "Angular (Signals, RxJS, NgRx)",
                "TypeScript",
                "UI architecture & component design",
                "Java (Spring Boot, JPA/Hibernate)",
                "C# (.NET Web API, Entity Framework)",
                "Python (prototyping)",
                "Kafka & Change Data Capture (CDC)",
                "Data medallion layers (bronze/silver/gold)",
                "Kubernetes",
                "Ansible",
                "Azure DevOps",
                "GitHub Actions",
                "GitLab Runners",
                "GCP & Firebase",
                "Grafana, Prometheus, Loki, Tempo",
                "Keycloak (OIDC/SAML), Kerberos",
                "PKI/Certificate Authority, TLS/mTLS",
                "RHEL 9, VMs",
                "Feature flags",
                "DORA metrics"
            ]
        },
        {
            "title": "Soft Skills",
            "skills": [
                "Systems Thinking",
                "Cross‑functional Collaboration",
                "Technical Leadership & Coaching",
                "Stakeholder Communication",
                "Problem Solving",
                "Iteration & Rapid Prototyping",
                "Kanban Facilitation"
            ]
        },
        {
            "title": "Additional Skills",
            "skills": [
                "Observability & SRE Practices",
                "Documentation & ADRs",
                "AI‑Assisted Engineering (LLMs/ChatGPT CLI)",
                "Testing & Quality Gates",
                "Release & Deployment Strategies"
            ]
        }
    ],
    "languages": ["English"],
    "certifications": []
} >>>

OUTPUT (in this exact order)
1) KEYWORDS_JSON
   - JSON with:
     {
       "hard_skills": [{"term":"React", "weight":5, "synonyms":["React.js"]}, ...],
       "tools": [{"term":"Azure DevOps","weight":4,"synonyms":["ADO","Azure Boards"]}],
       "languages": [...],
       "cloud": [...],
       "soft_skills": [...],
       "certs_or_quals": [...],
       "domain_terms": [...],
       "must_haves": [...],   // legal/clearance/shift/location/degree-alt
       "nice_to_haves": [...]
     }
   - Weights: 5=critical, 4=important, 3=useful, 2=minor, 1=nice.

2) COVERAGE_TABLE
   - A compact table listing each keyword → Present/Missing → Where found or suggested placement.
   - Map synonyms (e.g., “CI/CD” covers “continuous integration”, etc.).

3) EDIT_SUGGESTIONS
   - Bullet-by-bullet rewrites (STAR-style) that truthfully incorporate missing/aligned keywords.
   - Keep metrics, impact, and tense consistent. No fluff, no exaggerations.

4) SUMMARY + SKILLS
   - 2–3 line Professional Summary tailored to the job.
   - ATS-friendly SKILLS block grouping the critical keywords.

5) REVISED_RESUME (ATS-safe)
   - Single column, no text boxes/tables, standard headings (SUMMARY, SKILLS, EXPERIENCE, EDUCATION).
   - Integrate approved rewrites and keyword coverage naturally.
   - Keep everything truthful and consistent with my background.

6) MATCH_SCORE
   - % coverage using your weights. Show formula and top gaps to close the last 10–20%.
